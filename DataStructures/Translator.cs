using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DataStructures
{
	public static class Translator
	{
		public static Dictionary<string,string> SetCodeTranslationTable = new Dictionary<string,string>();
		public static Dictionary<string, Dictionary<BasicLandTypes, int>> SetBasicLandTypeCounts = new Dictionary<string, Dictionary<BasicLandTypes, int>>();
		private static bool Initialized = false;

		public static string GetSetName(string code)
		{
			if (!Initialized) Init();
			foreach(KeyValuePair<string,string> p in SetCodeTranslationTable)
			{
				if (p.Value == code)
					return p.Key;
			}
			return "";
		}
		public static string GetSetCode(string name)
		{
			if (!Initialized) Init();
			if (SetCodeTranslationTable.ContainsKey(name))
				return SetCodeTranslationTable[name];
			return "";
		}

		public static int WordToNumber(string word)
		{
			word = word.Trim().ToLower();

			//Just up to what might be plausibly found in the text of a Magic card
			if (word == "zero") return 0;
			if (word == "one") return 1;
			if (word == "two") return 2;
			if (word == "three") return 3;
			if (word == "four") return 4;
			if (word == "five") return 5;
			if (word == "six") return 6;
			if (word == "seven") return 7;
			if (word == "eight") return 8;
			if (word == "nine") return 9;
			if (word == "ten") return 10;

			return -1; //No wording is ever likely to say "negative one" or "minus one"
		}

		public static int GetLandCount(string set, BasicLandTypes type)
		{
			if (!SetBasicLandTypeCounts.ContainsKey(set))
			{
				set = GetSetName(set);
				if (!SetBasicLandTypeCounts.ContainsKey(set)) return 0;
			}

			return SetBasicLandTypeCounts[set][type];
		}

		public static string[] ToCodeArray(string[] sets)
		{
			string[] ret = new string[sets.Length];
			for (int i = 0; i < sets.Length; i++)
			{
				ret[i] = Translator.GetSetCode(sets[i]);
			}
			return ret;
		}

		public static void Init()
		{
			#region SetCodes
			SetCodeTranslationTable.Add("Limited Edition Alpha","LEA");
			SetCodeTranslationTable.Add("Limited Edition Beta","LEB");
			SetCodeTranslationTable.Add("Arabian Nights","ARN");
			SetCodeTranslationTable.Add("Unlimited Edition","2ED");
			SetCodeTranslationTable.Add("Dragon Con","pDRC");
			SetCodeTranslationTable.Add("Antiquities","ATQ");
			SetCodeTranslationTable.Add("Revised Edition","3ED");
			SetCodeTranslationTable.Add("Legends","LEG");
			SetCodeTranslationTable.Add("The Dark","DRK");
			SetCodeTranslationTable.Add("Media Inserts","pMEI");
			SetCodeTranslationTable.Add("Fallen Empires","FEM");
			SetCodeTranslationTable.Add("Legend Membership","pLGM");
			SetCodeTranslationTable.Add("Fourth Edition","4ED");
			SetCodeTranslationTable.Add("Ice Age","ICE");
			SetCodeTranslationTable.Add("Chronicles","CHR");
			SetCodeTranslationTable.Add("Homelands","HML");
			SetCodeTranslationTable.Add("Alliances","ALL");
			SetCodeTranslationTable.Add("Rivals Quick Start Set","RQS");
			SetCodeTranslationTable.Add("Arena League","pARL");
			SetCodeTranslationTable.Add("Celebration","pCEL");
			SetCodeTranslationTable.Add("Mirage","MIR");
			SetCodeTranslationTable.Add("Multiverse Gift Box","MGB");
			SetCodeTranslationTable.Add("Introductory Two-Player Set","ITP");
			SetCodeTranslationTable.Add("Visions","VIS");
			SetCodeTranslationTable.Add("Fifth Edition","5ED");
			SetCodeTranslationTable.Add("Portal Demo Game","pPOD");
			SetCodeTranslationTable.Add("Portal","POR");
			SetCodeTranslationTable.Add("Vanguard","VAN");
			SetCodeTranslationTable.Add("Weatherlight","WTH");
			SetCodeTranslationTable.Add("Prerelease Events","pPRE");
			SetCodeTranslationTable.Add("Tempest","TMP");
			SetCodeTranslationTable.Add("Stronghold","STH");
			SetCodeTranslationTable.Add("Portal Second Age","PO2");
			SetCodeTranslationTable.Add("Judge Gift Program","pJGP");
			SetCodeTranslationTable.Add("Exodus","EXO");
			SetCodeTranslationTable.Add("Unglued","UGL");
			SetCodeTranslationTable.Add("Asia Pacific Land Program","pALP");
			SetCodeTranslationTable.Add("Urza's Saga","USG");
			SetCodeTranslationTable.Add("Anthologies","ATH");
			SetCodeTranslationTable.Add("Urza's Legacy","ULG");
			SetCodeTranslationTable.Add("Classic Sixth Edition","6ED");
			SetCodeTranslationTable.Add("Portal Three Kingdoms","PTK");
			SetCodeTranslationTable.Add("Urza's Destiny","UDS");
			SetCodeTranslationTable.Add("Starter 1999","S99");
			SetCodeTranslationTable.Add("Guru","pGRU");
			SetCodeTranslationTable.Add("Worlds","pWOR");
			SetCodeTranslationTable.Add("Wizards of the Coast Online Store","pWOS");
			SetCodeTranslationTable.Add("Mercadian Masques","MMQ");
			SetCodeTranslationTable.Add("Battle Royale Box Set","BRB");
			SetCodeTranslationTable.Add("Super Series","pSUS");
			SetCodeTranslationTable.Add("Friday Night Magic","pFNM");
			SetCodeTranslationTable.Add("European Land Program","pELP");
			SetCodeTranslationTable.Add("Nemesis","NMS");
			SetCodeTranslationTable.Add("Starter 2000","S00");
			SetCodeTranslationTable.Add("Prophecy","PCY");
			SetCodeTranslationTable.Add("Beatdown Box Set","BTD");
			SetCodeTranslationTable.Add("Invasion","INV");
			SetCodeTranslationTable.Add("Planeshift","PLS");
			SetCodeTranslationTable.Add("Seventh Edition","7ED");
			SetCodeTranslationTable.Add("Magic Player Rewards","pMPR");
			SetCodeTranslationTable.Add("Apocalypse","APC");
			SetCodeTranslationTable.Add("Odyssey","ODY");
			SetCodeTranslationTable.Add("Deckmasters","DKM");
			SetCodeTranslationTable.Add("Torment","TOR");
			SetCodeTranslationTable.Add("Judgment","JUD");
			SetCodeTranslationTable.Add("Onslaught","ONS");
			SetCodeTranslationTable.Add("Legions","LGN");
			SetCodeTranslationTable.Add("Scourge","SCG");
			SetCodeTranslationTable.Add("Release Events","pREL");
			SetCodeTranslationTable.Add("Eighth Edition","8ED");
			SetCodeTranslationTable.Add("Eighth Edition Box Set","8BS");
			SetCodeTranslationTable.Add("Mirrodin","MRD");
			SetCodeTranslationTable.Add("Darksteel","DST");
			SetCodeTranslationTable.Add("Fifth Dawn","5DN");
			SetCodeTranslationTable.Add("Champions of Kamigawa","CHK");
			SetCodeTranslationTable.Add("Betrayers of Kamigawa","BOK");
			SetCodeTranslationTable.Add("Saviors of Kamigawa","SOK");
			SetCodeTranslationTable.Add("Ninth Edition","9ED");
			SetCodeTranslationTable.Add("Ninth Edition Box Set","9BS");
			SetCodeTranslationTable.Add("Ravnica: City of Guilds","RAV");
			SetCodeTranslationTable.Add("Two-Headed Giant Tournament","p2HG");
			SetCodeTranslationTable.Add("WPN and Gateway","pWPN");
			SetCodeTranslationTable.Add("Guildpact","GPT");
			SetCodeTranslationTable.Add("Champs and States","pCMP");
			SetCodeTranslationTable.Add("Dissension","DIS");
			SetCodeTranslationTable.Add("Coldsnap","CSP");
			SetCodeTranslationTable.Add("Coldsnap Theme Decks","CST");
			SetCodeTranslationTable.Add("Time Spiral","TSP");
			SetCodeTranslationTable.Add("Time Spiral \"Timeshifted\"","TSB");
			SetCodeTranslationTable.Add("Happy Holidays","pHHO");
			SetCodeTranslationTable.Add("Planar Chaos","PLC");
			SetCodeTranslationTable.Add("Pro Tour","pPRO");
			SetCodeTranslationTable.Add("Grand Prix","pGPX");
			SetCodeTranslationTable.Add("Future Sight","FUT");
			SetCodeTranslationTable.Add("Tenth Edition","10E");
			SetCodeTranslationTable.Add("Magic Game Day","pMGD");
			SetCodeTranslationTable.Add("Masters Edition","MED");
			SetCodeTranslationTable.Add("Lorwyn","LRW");
			SetCodeTranslationTable.Add("Duel Decks: Elves vs. Goblins","EVG");
			SetCodeTranslationTable.Add("Launch Parties","pLPA");
			SetCodeTranslationTable.Add("Morningtide","MOR");
			SetCodeTranslationTable.Add("15th Anniversary","p15A");
			SetCodeTranslationTable.Add("Shadowmoor","SHM");
			SetCodeTranslationTable.Add("Summer of Magic","pSUM");
			SetCodeTranslationTable.Add("Eventide","EVE");
			SetCodeTranslationTable.Add("From the Vault: Dragons","DRB");
			SetCodeTranslationTable.Add("Masters Edition II","ME2");
			SetCodeTranslationTable.Add("Shards of Alara","ALA");
			SetCodeTranslationTable.Add("Duel Decks: Jace vs. Chandra","DD2");
			SetCodeTranslationTable.Add("Conflux","CON");
			SetCodeTranslationTable.Add("Duel Decks: Divine vs. Demonic","DDC");
			SetCodeTranslationTable.Add("Alara Reborn","ARB");
			SetCodeTranslationTable.Add("Magic 2010","M10");
			SetCodeTranslationTable.Add("From the Vault: Exiled","V09");
			SetCodeTranslationTable.Add("Planechase","HOP");
			SetCodeTranslationTable.Add("Masters Edition III","ME3");
			SetCodeTranslationTable.Add("Zendikar","ZEN");
			SetCodeTranslationTable.Add("Duel Decks: Garruk vs. Liliana","DDD");
			SetCodeTranslationTable.Add("Premium Deck Series: Slivers","H09");
			SetCodeTranslationTable.Add("Worldwake","WWK");
			SetCodeTranslationTable.Add("Duel Decks: Phyrexia vs. the Coalition","DDE");
			SetCodeTranslationTable.Add("Rise of the Eldrazi","ROE");
			SetCodeTranslationTable.Add("Duels of the Planeswalkers","DPA");
			SetCodeTranslationTable.Add("Archenemy","ARC");
			SetCodeTranslationTable.Add("Magic 2011","M11");
			SetCodeTranslationTable.Add("From the Vault: Relics","V10");
			SetCodeTranslationTable.Add("Duel Decks: Elspeth vs. Tezzeret","DDF");
			SetCodeTranslationTable.Add("Scars of Mirrodin","SOM");
			SetCodeTranslationTable.Add("Premium Deck Series: Fire and Lightning","PD2");
			SetCodeTranslationTable.Add("Masters Edition IV","ME4");
			SetCodeTranslationTable.Add("Mirrodin Besieged","MBS");
			SetCodeTranslationTable.Add("Duel Decks: Knights vs. Dragons","DDG");
			SetCodeTranslationTable.Add("New Phyrexia","NPH");
			SetCodeTranslationTable.Add("Magic: The Gathering-Commander","CMD");
			SetCodeTranslationTable.Add("Magic 2012","M12");
			SetCodeTranslationTable.Add("From the Vault: Legends","V11");
			SetCodeTranslationTable.Add("Duel Decks: Ajani vs. Nicol Bolas","DDH");
			SetCodeTranslationTable.Add("Innistrad","ISD");
			SetCodeTranslationTable.Add("Premium Deck Series: Graveborn","PD3");
			SetCodeTranslationTable.Add("Dark Ascension","DKA");
			SetCodeTranslationTable.Add("Duel Decks: Venser vs. Koth","DDI");
			SetCodeTranslationTable.Add("Avacyn Restored","AVR");
			SetCodeTranslationTable.Add("Planechase 2012 Edition","PC2");
			SetCodeTranslationTable.Add("Magic 2013","M13");
			SetCodeTranslationTable.Add("From the Vault: Realms","V12");
			SetCodeTranslationTable.Add("Duel Decks: Izzet vs. Golgari","DDJ");
			SetCodeTranslationTable.Add("Return to Ravnica","RTR");
			SetCodeTranslationTable.Add("Commander's Arsenal","CM1");
			SetCodeTranslationTable.Add("Gatecrash","GTC");
			SetCodeTranslationTable.Add("Duel Decks: Sorin vs. Tibalt","DDK");
			SetCodeTranslationTable.Add("World Magic Cup Qualifiers","pWCQ");
			SetCodeTranslationTable.Add("Dragon's Maze","DGM");
			SetCodeTranslationTable.Add("Modern Masters","MMA");
			SetCodeTranslationTable.Add("Magic 2014 Core Set","M14");
			SetCodeTranslationTable.Add("From the Vault: Twenty","V13");
			SetCodeTranslationTable.Add("Duel Decks: Heroes vs. Monsters","DDL");
			SetCodeTranslationTable.Add("Theros","THS");
			SetCodeTranslationTable.Add("Commander 2013 Edition","C13");
			SetCodeTranslationTable.Add("Born of the Gods","BNG");
			SetCodeTranslationTable.Add("Duel Decks: Jace vs. Vraska","DDM");
			SetCodeTranslationTable.Add("Journey into Nyx","JOU");
			SetCodeTranslationTable.Add("Modern Event Deck 2014","MD1");
			SetCodeTranslationTable.Add("Magic: The Gathering?Conspiracy","CNS");
			SetCodeTranslationTable.Add("Vintage Masters","VMA");
			SetCodeTranslationTable.Add("Magic 2015 Core Set","M15");
			SetCodeTranslationTable.Add("From the Vault: Annihilation (2014)","V14");
			SetCodeTranslationTable.Add("Duel Decks: Speed vs. Cunning","DDN");
			SetCodeTranslationTable.Add("Khans of Tarkir","KTK");
			SetCodeTranslationTable.Add("Commander 2014","C14");
			#endregion
			
			#region LandCounts
				SetBasicLandTypeCounts.Add("Limited Edition Alpha", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Limited Edition Alpha"].Add(BasicLandTypes.Forest,2);
				SetBasicLandTypeCounts["Limited Edition Alpha"].Add(BasicLandTypes.Mountain,2);
				SetBasicLandTypeCounts["Limited Edition Alpha"].Add(BasicLandTypes.Swamp,2);
				SetBasicLandTypeCounts["Limited Edition Alpha"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Limited Edition Alpha"].Add(BasicLandTypes.Plains,2);
				SetBasicLandTypeCounts.Add("Limited Edition Beta", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Limited Edition Beta"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Limited Edition Beta"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Limited Edition Beta"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Limited Edition Beta"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Limited Edition Beta"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Arabian Nights", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Arabian Nights"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Arabian Nights"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Arabian Nights"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Arabian Nights"].Add(BasicLandTypes.Island,2);
				SetBasicLandTypeCounts["Arabian Nights"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Unlimited Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Unlimited Edition"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Unlimited Edition"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Unlimited Edition"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Unlimited Edition"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Unlimited Edition"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Dragon Con", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Dragon Con"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Dragon Con"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Dragon Con"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Dragon Con"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Dragon Con"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Antiquities", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Antiquities"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Antiquities"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Antiquities"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Antiquities"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Antiquities"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Revised Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Revised Edition"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Revised Edition"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Revised Edition"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Revised Edition"].Add(BasicLandTypes.Island,5);
				SetBasicLandTypeCounts["Revised Edition"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Legends", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Legends"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Legends"].Add(BasicLandTypes.Mountain,2);
				SetBasicLandTypeCounts["Legends"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Legends"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Legends"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("The Dark", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["The Dark"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["The Dark"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["The Dark"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["The Dark"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["The Dark"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Media Inserts", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Media Inserts"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Media Inserts"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Media Inserts"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Media Inserts"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Media Inserts"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Fallen Empires", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Fallen Empires"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Fallen Empires"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Fallen Empires"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Fallen Empires"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Fallen Empires"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Legend Membership", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Legend Membership"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Legend Membership"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Legend Membership"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Legend Membership"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Legend Membership"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Fourth Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Fourth Edition"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Fourth Edition"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Fourth Edition"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Fourth Edition"].Add(BasicLandTypes.Island,5);
				SetBasicLandTypeCounts["Fourth Edition"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Ice Age", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Ice Age"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Ice Age"].Add(BasicLandTypes.Mountain,5);
				SetBasicLandTypeCounts["Ice Age"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Ice Age"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Ice Age"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Chronicles", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Chronicles"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Chronicles"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Chronicles"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Chronicles"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Chronicles"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Homelands", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Homelands"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Homelands"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Homelands"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Homelands"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Homelands"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Alliances", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Alliances"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Alliances"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Alliances"].Add(BasicLandTypes.Swamp,2);
				SetBasicLandTypeCounts["Alliances"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Alliances"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Rivals Quick Start Set", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Rivals Quick Start Set"].Add(BasicLandTypes.Forest,1);
				SetBasicLandTypeCounts["Rivals Quick Start Set"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Rivals Quick Start Set"].Add(BasicLandTypes.Swamp,1);
				SetBasicLandTypeCounts["Rivals Quick Start Set"].Add(BasicLandTypes.Island,1);
				SetBasicLandTypeCounts["Rivals Quick Start Set"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Arena League", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Arena League"].Add(BasicLandTypes.Forest,9);
				SetBasicLandTypeCounts["Arena League"].Add(BasicLandTypes.Mountain,8);
				SetBasicLandTypeCounts["Arena League"].Add(BasicLandTypes.Swamp,8);
				SetBasicLandTypeCounts["Arena League"].Add(BasicLandTypes.Island,9);
				SetBasicLandTypeCounts["Arena League"].Add(BasicLandTypes.Plains,8);
				SetBasicLandTypeCounts.Add("Celebration", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Celebration"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Celebration"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Celebration"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Celebration"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Celebration"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Mirage", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Mirage"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Mirage"].Add(BasicLandTypes.Mountain,5);
				SetBasicLandTypeCounts["Mirage"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Mirage"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Mirage"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Multiverse Gift Box", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Multiverse Gift Box"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Multiverse Gift Box"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Multiverse Gift Box"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Multiverse Gift Box"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Multiverse Gift Box"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Introductory Two-Player Set", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Introductory Two-Player Set"].Add(BasicLandTypes.Forest,1);
				SetBasicLandTypeCounts["Introductory Two-Player Set"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Introductory Two-Player Set"].Add(BasicLandTypes.Swamp,1);
				SetBasicLandTypeCounts["Introductory Two-Player Set"].Add(BasicLandTypes.Island,1);
				SetBasicLandTypeCounts["Introductory Two-Player Set"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Visions", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Visions"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Visions"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Visions"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Visions"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Visions"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Fifth Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Fifth Edition"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Fifth Edition"].Add(BasicLandTypes.Mountain,5);
				SetBasicLandTypeCounts["Fifth Edition"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Fifth Edition"].Add(BasicLandTypes.Island,5);
				SetBasicLandTypeCounts["Fifth Edition"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Portal Demo Game", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Portal Demo Game"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Portal Demo Game"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Portal Demo Game"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Portal Demo Game"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Portal Demo Game"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Portal", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Portal"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Portal"].Add(BasicLandTypes.Mountain,5);
				SetBasicLandTypeCounts["Portal"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Portal"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Portal"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Vanguard", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Vanguard"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Vanguard"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Vanguard"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Vanguard"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Vanguard"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Weatherlight", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Weatherlight"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Weatherlight"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Weatherlight"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Weatherlight"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Weatherlight"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Prerelease Events", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Prerelease Events"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Prerelease Events"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Prerelease Events"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Prerelease Events"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Prerelease Events"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Tempest", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Tempest"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Tempest"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Tempest"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Tempest"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Tempest"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Stronghold", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Stronghold"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Stronghold"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Stronghold"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Stronghold"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Stronghold"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Portal Second Age", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Portal Second Age"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Portal Second Age"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Portal Second Age"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Portal Second Age"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Portal Second Age"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Judge Gift Program", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Judge Gift Program"].Add(BasicLandTypes.Forest,1);
				SetBasicLandTypeCounts["Judge Gift Program"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Judge Gift Program"].Add(BasicLandTypes.Swamp,1);
				SetBasicLandTypeCounts["Judge Gift Program"].Add(BasicLandTypes.Island,1);
				SetBasicLandTypeCounts["Judge Gift Program"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Exodus", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Exodus"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Exodus"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Exodus"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Exodus"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Exodus"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Unglued", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Unglued"].Add(BasicLandTypes.Forest,1);
				SetBasicLandTypeCounts["Unglued"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Unglued"].Add(BasicLandTypes.Swamp,1);
				SetBasicLandTypeCounts["Unglued"].Add(BasicLandTypes.Island,1);
				SetBasicLandTypeCounts["Unglued"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Asia Pacific Land Program", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Asia Pacific Land Program"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Asia Pacific Land Program"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Asia Pacific Land Program"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Asia Pacific Land Program"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Asia Pacific Land Program"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Urza's Saga", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Urza's Saga"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Urza's Saga"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Urza's Saga"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Urza's Saga"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Urza's Saga"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Anthologies", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Anthologies"].Add(BasicLandTypes.Forest,1);
				SetBasicLandTypeCounts["Anthologies"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Anthologies"].Add(BasicLandTypes.Swamp,1);
				SetBasicLandTypeCounts["Anthologies"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Anthologies"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Urza's Legacy", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Urza's Legacy"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Urza's Legacy"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Urza's Legacy"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Urza's Legacy"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Urza's Legacy"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Classic Sixth Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Classic Sixth Edition"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Classic Sixth Edition"].Add(BasicLandTypes.Mountain,5);
				SetBasicLandTypeCounts["Classic Sixth Edition"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Classic Sixth Edition"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Classic Sixth Edition"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Portal Three Kingdoms", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Portal Three Kingdoms"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Portal Three Kingdoms"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Portal Three Kingdoms"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Portal Three Kingdoms"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Portal Three Kingdoms"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Urza's Destiny", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Urza's Destiny"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Urza's Destiny"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Urza's Destiny"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Urza's Destiny"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Urza's Destiny"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Starter 1999", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Starter 1999"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Starter 1999"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Starter 1999"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Starter 1999"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Starter 1999"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Guru", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Guru"].Add(BasicLandTypes.Forest,1);
				SetBasicLandTypeCounts["Guru"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Guru"].Add(BasicLandTypes.Swamp,1);
				SetBasicLandTypeCounts["Guru"].Add(BasicLandTypes.Island,1);
				SetBasicLandTypeCounts["Guru"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Worlds", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Worlds"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Worlds"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Worlds"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Worlds"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Worlds"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Wizards of the Coast Online Store", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Wizards of the Coast Online Store"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Wizards of the Coast Online Store"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Wizards of the Coast Online Store"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Wizards of the Coast Online Store"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Wizards of the Coast Online Store"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Mercadian Masques", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Mercadian Masques"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Mercadian Masques"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Mercadian Masques"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Mercadian Masques"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Mercadian Masques"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Battle Royale Box Set", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Battle Royale Box Set"].Add(BasicLandTypes.Forest,9);
				SetBasicLandTypeCounts["Battle Royale Box Set"].Add(BasicLandTypes.Mountain,9);
				SetBasicLandTypeCounts["Battle Royale Box Set"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Battle Royale Box Set"].Add(BasicLandTypes.Island,5);
				SetBasicLandTypeCounts["Battle Royale Box Set"].Add(BasicLandTypes.Plains,9);
				SetBasicLandTypeCounts.Add("Super Series", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Super Series"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Super Series"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Super Series"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Super Series"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Super Series"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Friday Night Magic", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Friday Night Magic"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Friday Night Magic"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Friday Night Magic"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Friday Night Magic"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Friday Night Magic"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("European Land Program", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["European Land Program"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["European Land Program"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["European Land Program"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["European Land Program"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["European Land Program"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Nemesis", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Nemesis"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Nemesis"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Nemesis"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Nemesis"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Nemesis"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Starter 2000", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Starter 2000"].Add(BasicLandTypes.Forest,2);
				SetBasicLandTypeCounts["Starter 2000"].Add(BasicLandTypes.Mountain,2);
				SetBasicLandTypeCounts["Starter 2000"].Add(BasicLandTypes.Swamp,2);
				SetBasicLandTypeCounts["Starter 2000"].Add(BasicLandTypes.Island,2);
				SetBasicLandTypeCounts["Starter 2000"].Add(BasicLandTypes.Plains,2);
				SetBasicLandTypeCounts.Add("Prophecy", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Prophecy"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Prophecy"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Prophecy"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Prophecy"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Prophecy"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Beatdown Box Set", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Beatdown Box Set"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Beatdown Box Set"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Beatdown Box Set"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Beatdown Box Set"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Beatdown Box Set"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Invasion", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Invasion"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Invasion"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Invasion"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Invasion"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Invasion"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Planeshift", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Planeshift"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Planeshift"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Planeshift"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Planeshift"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Planeshift"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Seventh Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Seventh Edition"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Seventh Edition"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Seventh Edition"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Seventh Edition"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Seventh Edition"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Magic Player Rewards", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Magic Player Rewards"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Magic Player Rewards"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Magic Player Rewards"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Magic Player Rewards"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Magic Player Rewards"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Apocalypse", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Apocalypse"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Apocalypse"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Apocalypse"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Apocalypse"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Apocalypse"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Odyssey", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Odyssey"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Odyssey"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Odyssey"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Odyssey"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Odyssey"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Deckmasters", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Deckmasters"].Add(BasicLandTypes.Forest,1);
				SetBasicLandTypeCounts["Deckmasters"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Deckmasters"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Deckmasters"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Deckmasters"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Torment", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Torment"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Torment"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Torment"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Torment"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Torment"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Judgment", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Judgment"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Judgment"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Judgment"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Judgment"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Judgment"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Onslaught", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Onslaught"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Onslaught"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Onslaught"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Onslaught"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Onslaught"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Legions", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Legions"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Legions"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Legions"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Legions"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Legions"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Scourge", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Scourge"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Scourge"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Scourge"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Scourge"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Scourge"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Release Events", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Release Events"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Release Events"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Release Events"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Release Events"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Release Events"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Eighth Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Eighth Edition"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Eighth Edition"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Eighth Edition"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Eighth Edition"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Eighth Edition"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Eighth Edition Box Set", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Eighth Edition Box Set"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Eighth Edition Box Set"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Eighth Edition Box Set"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Eighth Edition Box Set"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Eighth Edition Box Set"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Mirrodin", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Mirrodin"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Mirrodin"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Mirrodin"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Mirrodin"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Mirrodin"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Darksteel", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Darksteel"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Darksteel"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Darksteel"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Darksteel"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Darksteel"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Fifth Dawn", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Fifth Dawn"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Fifth Dawn"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Fifth Dawn"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Fifth Dawn"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Fifth Dawn"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Champions of Kamigawa", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Champions of Kamigawa"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Champions of Kamigawa"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Champions of Kamigawa"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Champions of Kamigawa"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Champions of Kamigawa"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Betrayers of Kamigawa", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Betrayers of Kamigawa"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Betrayers of Kamigawa"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Betrayers of Kamigawa"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Betrayers of Kamigawa"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Betrayers of Kamigawa"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Saviors of Kamigawa", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Saviors of Kamigawa"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Saviors of Kamigawa"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Saviors of Kamigawa"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Saviors of Kamigawa"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Saviors of Kamigawa"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Ninth Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Ninth Edition"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Ninth Edition"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Ninth Edition"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Ninth Edition"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Ninth Edition"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Ninth Edition Box Set", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Ninth Edition Box Set"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Ninth Edition Box Set"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Ninth Edition Box Set"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Ninth Edition Box Set"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Ninth Edition Box Set"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Ravnica: City of Guilds", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Ravnica: City of Guilds"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Ravnica: City of Guilds"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Ravnica: City of Guilds"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Ravnica: City of Guilds"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Ravnica: City of Guilds"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Two-Headed Giant Tournament", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Two-Headed Giant Tournament"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Two-Headed Giant Tournament"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Two-Headed Giant Tournament"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Two-Headed Giant Tournament"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Two-Headed Giant Tournament"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("WPN and Gateway", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["WPN and Gateway"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["WPN and Gateway"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["WPN and Gateway"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["WPN and Gateway"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["WPN and Gateway"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Guildpact", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Guildpact"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Guildpact"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Guildpact"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Guildpact"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Guildpact"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Champs and States", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Champs and States"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Champs and States"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Champs and States"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Champs and States"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Champs and States"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Dissension", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Dissension"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Dissension"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Dissension"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Dissension"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Dissension"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Coldsnap", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Coldsnap"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Coldsnap"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Coldsnap"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Coldsnap"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Coldsnap"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Coldsnap Theme Decks", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Coldsnap Theme Decks"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Coldsnap Theme Decks"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Coldsnap Theme Decks"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Coldsnap Theme Decks"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Coldsnap Theme Decks"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Time Spiral", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Time Spiral"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Time Spiral"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Time Spiral"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Time Spiral"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Time Spiral"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Time Spiral \"Timeshifted\"", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Time Spiral \"Timeshifted\""].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Time Spiral \"Timeshifted\""].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Time Spiral \"Timeshifted\""].Add(BasicLandTypes.Swamp,1);
				SetBasicLandTypeCounts["Time Spiral \"Timeshifted\""].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Time Spiral \"Timeshifted\""].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Happy Holidays", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Happy Holidays"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Happy Holidays"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Happy Holidays"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Happy Holidays"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Happy Holidays"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Planar Chaos", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Planar Chaos"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Planar Chaos"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Planar Chaos"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Planar Chaos"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Planar Chaos"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Pro Tour", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Pro Tour"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Pro Tour"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Pro Tour"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Pro Tour"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Pro Tour"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Grand Prix", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Grand Prix"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Grand Prix"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Grand Prix"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Grand Prix"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Grand Prix"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Future Sight", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Future Sight"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Future Sight"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Future Sight"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Future Sight"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Future Sight"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Tenth Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Tenth Edition"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Tenth Edition"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Tenth Edition"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Tenth Edition"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Tenth Edition"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Magic Game Day", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Magic Game Day"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Magic Game Day"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Magic Game Day"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Magic Game Day"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Magic Game Day"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Masters Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Masters Edition"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Masters Edition"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Masters Edition"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Masters Edition"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Masters Edition"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Lorwyn", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Lorwyn"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Lorwyn"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Lorwyn"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Lorwyn"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Lorwyn"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Duel Decks: Elves vs. Goblins", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Elves vs. Goblins"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Duel Decks: Elves vs. Goblins"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Duel Decks: Elves vs. Goblins"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Duel Decks: Elves vs. Goblins"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Duel Decks: Elves vs. Goblins"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Launch Parties", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Launch Parties"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Launch Parties"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Launch Parties"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Launch Parties"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Launch Parties"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Morningtide", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Morningtide"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Morningtide"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Morningtide"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Morningtide"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Morningtide"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("15th Anniversary", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["15th Anniversary"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["15th Anniversary"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["15th Anniversary"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["15th Anniversary"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["15th Anniversary"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Shadowmoor", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Shadowmoor"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Shadowmoor"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Shadowmoor"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Shadowmoor"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Shadowmoor"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Summer of Magic", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Summer of Magic"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Summer of Magic"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Summer of Magic"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Summer of Magic"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Summer of Magic"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Eventide", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Eventide"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Eventide"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Eventide"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Eventide"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Eventide"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("From the Vault: Dragons", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["From the Vault: Dragons"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["From the Vault: Dragons"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["From the Vault: Dragons"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["From the Vault: Dragons"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["From the Vault: Dragons"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Masters Edition II", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Masters Edition II"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Masters Edition II"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Masters Edition II"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Masters Edition II"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Masters Edition II"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Shards of Alara", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Shards of Alara"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Shards of Alara"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Shards of Alara"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Shards of Alara"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Shards of Alara"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Duel Decks: Jace vs. Chandra", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Jace vs. Chandra"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Duel Decks: Jace vs. Chandra"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Duel Decks: Jace vs. Chandra"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Duel Decks: Jace vs. Chandra"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Duel Decks: Jace vs. Chandra"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Conflux", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Conflux"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Conflux"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Conflux"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Conflux"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Conflux"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Duel Decks: Divine vs. Demonic", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Divine vs. Demonic"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Duel Decks: Divine vs. Demonic"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Duel Decks: Divine vs. Demonic"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Duel Decks: Divine vs. Demonic"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Duel Decks: Divine vs. Demonic"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Alara Reborn", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Alara Reborn"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Alara Reborn"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Alara Reborn"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Alara Reborn"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Alara Reborn"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Magic 2010", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Magic 2010"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Magic 2010"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Magic 2010"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Magic 2010"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Magic 2010"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("From the Vault: Exiled", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["From the Vault: Exiled"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["From the Vault: Exiled"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["From the Vault: Exiled"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["From the Vault: Exiled"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["From the Vault: Exiled"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Planechase", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Planechase"].Add(BasicLandTypes.Forest,5);
				SetBasicLandTypeCounts["Planechase"].Add(BasicLandTypes.Mountain,9);
				SetBasicLandTypeCounts["Planechase"].Add(BasicLandTypes.Swamp,5);
				SetBasicLandTypeCounts["Planechase"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Planechase"].Add(BasicLandTypes.Plains,5);
				SetBasicLandTypeCounts.Add("Masters Edition III", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Masters Edition III"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Masters Edition III"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Masters Edition III"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Masters Edition III"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Masters Edition III"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Zendikar", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Zendikar"].Add(BasicLandTypes.Forest,8);
				SetBasicLandTypeCounts["Zendikar"].Add(BasicLandTypes.Mountain,8);
				SetBasicLandTypeCounts["Zendikar"].Add(BasicLandTypes.Swamp,8);
				SetBasicLandTypeCounts["Zendikar"].Add(BasicLandTypes.Island,8);
				SetBasicLandTypeCounts["Zendikar"].Add(BasicLandTypes.Plains,8);
				SetBasicLandTypeCounts.Add("Duel Decks: Garruk vs. Liliana", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Garruk vs. Liliana"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Duel Decks: Garruk vs. Liliana"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Duel Decks: Garruk vs. Liliana"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Duel Decks: Garruk vs. Liliana"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Duel Decks: Garruk vs. Liliana"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Premium Deck Series: Slivers", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Premium Deck Series: Slivers"].Add(BasicLandTypes.Forest,1);
				SetBasicLandTypeCounts["Premium Deck Series: Slivers"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Premium Deck Series: Slivers"].Add(BasicLandTypes.Swamp,1);
				SetBasicLandTypeCounts["Premium Deck Series: Slivers"].Add(BasicLandTypes.Island,1);
				SetBasicLandTypeCounts["Premium Deck Series: Slivers"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Worldwake", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Worldwake"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Worldwake"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Worldwake"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Worldwake"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Worldwake"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Duel Decks: Phyrexia vs. the Coalition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Phyrexia vs. the Coalition"].Add(BasicLandTypes.Forest,2);
				SetBasicLandTypeCounts["Duel Decks: Phyrexia vs. the Coalition"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Duel Decks: Phyrexia vs. the Coalition"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Duel Decks: Phyrexia vs. the Coalition"].Add(BasicLandTypes.Island,1);
				SetBasicLandTypeCounts["Duel Decks: Phyrexia vs. the Coalition"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Rise of the Eldrazi", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Rise of the Eldrazi"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Rise of the Eldrazi"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Rise of the Eldrazi"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Rise of the Eldrazi"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Rise of the Eldrazi"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Duels of the Planeswalkers", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duels of the Planeswalkers"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Duels of the Planeswalkers"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Duels of the Planeswalkers"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Duels of the Planeswalkers"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Duels of the Planeswalkers"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Archenemy", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Archenemy"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Archenemy"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Archenemy"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Archenemy"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Archenemy"].Add(BasicLandTypes.Plains,2);
				SetBasicLandTypeCounts.Add("Magic 2011", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Magic 2011"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Magic 2011"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Magic 2011"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Magic 2011"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Magic 2011"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("From the Vault: Relics", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["From the Vault: Relics"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["From the Vault: Relics"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["From the Vault: Relics"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["From the Vault: Relics"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["From the Vault: Relics"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Duel Decks: Elspeth vs. Tezzeret", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Elspeth vs. Tezzeret"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Duel Decks: Elspeth vs. Tezzeret"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Duel Decks: Elspeth vs. Tezzeret"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Duel Decks: Elspeth vs. Tezzeret"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Duel Decks: Elspeth vs. Tezzeret"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Scars of Mirrodin", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Scars of Mirrodin"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Scars of Mirrodin"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Scars of Mirrodin"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Scars of Mirrodin"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Scars of Mirrodin"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Premium Deck Series: Fire and Lightning", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Premium Deck Series: Fire and Lightning"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Premium Deck Series: Fire and Lightning"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Premium Deck Series: Fire and Lightning"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Premium Deck Series: Fire and Lightning"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Premium Deck Series: Fire and Lightning"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Masters Edition IV", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Masters Edition IV"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Masters Edition IV"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Masters Edition IV"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Masters Edition IV"].Add(BasicLandTypes.Island,1);
				SetBasicLandTypeCounts["Masters Edition IV"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Mirrodin Besieged", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Mirrodin Besieged"].Add(BasicLandTypes.Forest,2);
				SetBasicLandTypeCounts["Mirrodin Besieged"].Add(BasicLandTypes.Mountain,2);
				SetBasicLandTypeCounts["Mirrodin Besieged"].Add(BasicLandTypes.Swamp,2);
				SetBasicLandTypeCounts["Mirrodin Besieged"].Add(BasicLandTypes.Island,2);
				SetBasicLandTypeCounts["Mirrodin Besieged"].Add(BasicLandTypes.Plains,2);
				SetBasicLandTypeCounts.Add("Duel Decks: Knights vs. Dragons", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Knights vs. Dragons"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Duel Decks: Knights vs. Dragons"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Duel Decks: Knights vs. Dragons"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Duel Decks: Knights vs. Dragons"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Duel Decks: Knights vs. Dragons"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("New Phyrexia", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["New Phyrexia"].Add(BasicLandTypes.Forest,2);
				SetBasicLandTypeCounts["New Phyrexia"].Add(BasicLandTypes.Mountain,2);
				SetBasicLandTypeCounts["New Phyrexia"].Add(BasicLandTypes.Swamp,2);
				SetBasicLandTypeCounts["New Phyrexia"].Add(BasicLandTypes.Island,2);
				SetBasicLandTypeCounts["New Phyrexia"].Add(BasicLandTypes.Plains,2);
				SetBasicLandTypeCounts.Add("Magic: The Gathering-Commander", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Magic: The Gathering-Commander"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Magic: The Gathering-Commander"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Magic: The Gathering-Commander"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Magic: The Gathering-Commander"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Magic: The Gathering-Commander"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Magic 2012", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Magic 2012"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Magic 2012"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Magic 2012"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Magic 2012"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Magic 2012"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("From the Vault: Legends", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["From the Vault: Legends"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["From the Vault: Legends"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["From the Vault: Legends"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["From the Vault: Legends"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["From the Vault: Legends"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Duel Decks: Ajani vs. Nicol Bolas", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Ajani vs. Nicol Bolas"].Add(BasicLandTypes.Forest,2);
				SetBasicLandTypeCounts["Duel Decks: Ajani vs. Nicol Bolas"].Add(BasicLandTypes.Mountain,2);
				SetBasicLandTypeCounts["Duel Decks: Ajani vs. Nicol Bolas"].Add(BasicLandTypes.Swamp,2);
				SetBasicLandTypeCounts["Duel Decks: Ajani vs. Nicol Bolas"].Add(BasicLandTypes.Island,1);
				SetBasicLandTypeCounts["Duel Decks: Ajani vs. Nicol Bolas"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Innistrad", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Innistrad"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Innistrad"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Innistrad"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Innistrad"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Innistrad"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Premium Deck Series: Graveborn", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Premium Deck Series: Graveborn"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Premium Deck Series: Graveborn"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Premium Deck Series: Graveborn"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Premium Deck Series: Graveborn"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Premium Deck Series: Graveborn"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Dark Ascension", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Dark Ascension"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Dark Ascension"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Dark Ascension"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Dark Ascension"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Dark Ascension"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Duel Decks: Venser vs. Koth", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Venser vs. Koth"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Duel Decks: Venser vs. Koth"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Duel Decks: Venser vs. Koth"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Duel Decks: Venser vs. Koth"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Duel Decks: Venser vs. Koth"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Avacyn Restored", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Avacyn Restored"].Add(BasicLandTypes.Forest,3);
				SetBasicLandTypeCounts["Avacyn Restored"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Avacyn Restored"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Avacyn Restored"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Avacyn Restored"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("Planechase 2012 Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Planechase 2012 Edition"].Add(BasicLandTypes.Forest,6);
				SetBasicLandTypeCounts["Planechase 2012 Edition"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Planechase 2012 Edition"].Add(BasicLandTypes.Swamp,5);
				SetBasicLandTypeCounts["Planechase 2012 Edition"].Add(BasicLandTypes.Island,5);
				SetBasicLandTypeCounts["Planechase 2012 Edition"].Add(BasicLandTypes.Plains,5);
				SetBasicLandTypeCounts.Add("Magic 2013", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Magic 2013"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Magic 2013"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Magic 2013"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Magic 2013"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Magic 2013"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("From the Vault: Realms", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["From the Vault: Realms"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["From the Vault: Realms"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["From the Vault: Realms"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["From the Vault: Realms"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["From the Vault: Realms"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Duel Decks: Izzet vs. Golgari", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Izzet vs. Golgari"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Duel Decks: Izzet vs. Golgari"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Duel Decks: Izzet vs. Golgari"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Duel Decks: Izzet vs. Golgari"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Duel Decks: Izzet vs. Golgari"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Return to Ravnica", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Return to Ravnica"].Add(BasicLandTypes.Forest,5);
				SetBasicLandTypeCounts["Return to Ravnica"].Add(BasicLandTypes.Mountain,5);
				SetBasicLandTypeCounts["Return to Ravnica"].Add(BasicLandTypes.Swamp,5);
				SetBasicLandTypeCounts["Return to Ravnica"].Add(BasicLandTypes.Island,5);
				SetBasicLandTypeCounts["Return to Ravnica"].Add(BasicLandTypes.Plains,5);
				SetBasicLandTypeCounts.Add("Commander's Arsenal", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Commander's Arsenal"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Commander's Arsenal"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Commander's Arsenal"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Commander's Arsenal"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Commander's Arsenal"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Gatecrash", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Gatecrash"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Gatecrash"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Gatecrash"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Gatecrash"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Gatecrash"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Duel Decks: Sorin vs. Tibalt", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Sorin vs. Tibalt"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Duel Decks: Sorin vs. Tibalt"].Add(BasicLandTypes.Mountain,3);
				SetBasicLandTypeCounts["Duel Decks: Sorin vs. Tibalt"].Add(BasicLandTypes.Swamp,6);
				SetBasicLandTypeCounts["Duel Decks: Sorin vs. Tibalt"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Duel Decks: Sorin vs. Tibalt"].Add(BasicLandTypes.Plains,3);
				SetBasicLandTypeCounts.Add("World Magic Cup Qualifiers", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["World Magic Cup Qualifiers"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["World Magic Cup Qualifiers"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["World Magic Cup Qualifiers"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["World Magic Cup Qualifiers"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["World Magic Cup Qualifiers"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Dragon's Maze", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Dragon's Maze"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Dragon's Maze"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Dragon's Maze"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Dragon's Maze"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Dragon's Maze"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Modern Masters", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Modern Masters"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Modern Masters"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Modern Masters"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Modern Masters"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Modern Masters"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Magic 2014 Core Set", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Magic 2014 Core Set"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Magic 2014 Core Set"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Magic 2014 Core Set"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Magic 2014 Core Set"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Magic 2014 Core Set"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("From the Vault: Twenty", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["From the Vault: Twenty"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["From the Vault: Twenty"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["From the Vault: Twenty"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["From the Vault: Twenty"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["From the Vault: Twenty"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Duel Decks: Heroes vs. Monsters", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Heroes vs. Monsters"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Duel Decks: Heroes vs. Monsters"].Add(BasicLandTypes.Mountain,8);
				SetBasicLandTypeCounts["Duel Decks: Heroes vs. Monsters"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Duel Decks: Heroes vs. Monsters"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Duel Decks: Heroes vs. Monsters"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Theros", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Theros"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Theros"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Theros"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Theros"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Theros"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Commander 2013 Edition", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Commander 2013 Edition"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Commander 2013 Edition"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Commander 2013 Edition"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Commander 2013 Edition"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Commander 2013 Edition"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Born of the Gods", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Born of the Gods"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Born of the Gods"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Born of the Gods"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Born of the Gods"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Born of the Gods"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Duel Decks: Jace vs. Vraska", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Jace vs. Vraska"].Add(BasicLandTypes.Forest,5);
				SetBasicLandTypeCounts["Duel Decks: Jace vs. Vraska"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Duel Decks: Jace vs. Vraska"].Add(BasicLandTypes.Swamp,5);
				SetBasicLandTypeCounts["Duel Decks: Jace vs. Vraska"].Add(BasicLandTypes.Island,5);
				SetBasicLandTypeCounts["Duel Decks: Jace vs. Vraska"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Journey into Nyx", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Journey into Nyx"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Journey into Nyx"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Journey into Nyx"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Journey into Nyx"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Journey into Nyx"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Modern Event Deck 2014", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Modern Event Deck 2014"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Modern Event Deck 2014"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Modern Event Deck 2014"].Add(BasicLandTypes.Swamp,1);
				SetBasicLandTypeCounts["Modern Event Deck 2014"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Modern Event Deck 2014"].Add(BasicLandTypes.Plains,1);
				SetBasicLandTypeCounts.Add("Magic: The Gathering?Conspiracy", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Magic: The Gathering?Conspiracy"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Magic: The Gathering?Conspiracy"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["Magic: The Gathering?Conspiracy"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Magic: The Gathering?Conspiracy"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Magic: The Gathering?Conspiracy"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Vintage Masters", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Vintage Masters"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Vintage Masters"].Add(BasicLandTypes.Mountain,1);
				SetBasicLandTypeCounts["Vintage Masters"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["Vintage Masters"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["Vintage Masters"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Magic 2015 Core Set", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Magic 2015 Core Set"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Magic 2015 Core Set"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Magic 2015 Core Set"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Magic 2015 Core Set"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Magic 2015 Core Set"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("From the Vault: Annihilation (2014)", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["From the Vault: Annihilation (2014)"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["From the Vault: Annihilation (2014)"].Add(BasicLandTypes.Mountain,0);
				SetBasicLandTypeCounts["From the Vault: Annihilation (2014)"].Add(BasicLandTypes.Swamp,0);
				SetBasicLandTypeCounts["From the Vault: Annihilation (2014)"].Add(BasicLandTypes.Island,0);
				SetBasicLandTypeCounts["From the Vault: Annihilation (2014)"].Add(BasicLandTypes.Plains,0);
				SetBasicLandTypeCounts.Add("Duel Decks: Speed vs. Cunning", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Duel Decks: Speed vs. Cunning"].Add(BasicLandTypes.Forest,0);
				SetBasicLandTypeCounts["Duel Decks: Speed vs. Cunning"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Duel Decks: Speed vs. Cunning"].Add(BasicLandTypes.Swamp,3);
				SetBasicLandTypeCounts["Duel Decks: Speed vs. Cunning"].Add(BasicLandTypes.Island,3);
				SetBasicLandTypeCounts["Duel Decks: Speed vs. Cunning"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Khans of Tarkir", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Khans of Tarkir"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Khans of Tarkir"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Khans of Tarkir"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Khans of Tarkir"].Add(BasicLandTypes.Island,4);
				SetBasicLandTypeCounts["Khans of Tarkir"].Add(BasicLandTypes.Plains,4);
				SetBasicLandTypeCounts.Add("Commander 2014", new Dictionary<BasicLandTypes, int>());
				SetBasicLandTypeCounts["Commander 2014"].Add(BasicLandTypes.Forest,4);
				SetBasicLandTypeCounts["Commander 2014"].Add(BasicLandTypes.Mountain,4);
				SetBasicLandTypeCounts["Commander 2014"].Add(BasicLandTypes.Swamp,4);
				SetBasicLandTypeCounts["Commander 2014"].Add(BasicLandTypes.Island,4);
SetBasicLandTypeCounts["Commander 2014"].Add(BasicLandTypes.Plains,4);
			#endregion

			Initialized = true;
		}
	}
}
